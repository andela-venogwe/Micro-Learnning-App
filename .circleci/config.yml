version: 2
defaults: &defaults
  working_directory: ~/Micro-Learnning-App
  docker:
    - image: circleci/ruby:2.5.1-node-browsers
    - image: circleci/postgres:9.4
      environment:
        POSTGRES_USER: ubuntu
        POSTGRES_DB: circle_test
restore_cache: &restore_cache
  keys:
    - v1-dependencies-{{ checksum "Gemfile.lock" }}
    - v1-dependencies-
jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - restore_cache:
          <<: *restore_cache
      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle
      - run:
          name: Setup Code Climate test-reporter
          command: |
            if (test ! -f ~/wirebot/cc-test-reporter); then
              echo "downloading clode climate test reporter";
              curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter;
              chmod +x ./cc-test-reporter;
            fi
      - save_cache:
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
          paths:
            - ./vendor/bundle
            - ~/Micro-Learnning-App/cc-test-reporter
      - run: bundle exec rake micro_learn:setup_database
  test:
    <<: *defaults
    steps:
      - setup_remote_docker
      - checkout
      - restore_cache:
          <<: *restore_cache
      - run:
          name: Notify Code Climate of current test
          command: ./cc-test-reporter before-build
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"

            bundle exec rspec --format progress \
              --format RspecJunitFormatter \
              --out /tmp/test-results/rspec.xml \
              --format progress \
              $TEST_FILES
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
      - run:
          name: Send coverage to Code Climate
          command: ./cc-test-reporter after-build upload-coverage -t lcov
          when: always
workflows:
  version: 2
  build-test:
    jobs:
      - build
      - test:
          requires:
            - build
